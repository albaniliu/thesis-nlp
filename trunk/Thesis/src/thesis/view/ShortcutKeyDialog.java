/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ShortcutKeyDialog.java
 *
 * Created on Jun 16, 2011, 3:51:48 PM
 */
package thesis.view;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.HashMap;
import javax.swing.JTextField;
import lib.Config;
import thesis.MainFrame;
import util.MyAnnotation;

/**
 *
 * @author anhdung
 */
public class ShortcutKeyDialog extends javax.swing.JDialog {

    /** Creates new form ShortcutKeyDialog
     * @param parent
     * @param modal
     * @param proper
     * @param tagPanel  
     */
    public ShortcutKeyDialog(java.awt.Frame parent, boolean modal,
            HashMap<String, String> mapShortcut, TaggingPanel tagPanel) {
        super(parent, modal);
        this.mapConfig = mapShortcut;
        this.tagPanel = tagPanel;
        text = "";
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        perShortcut = new javax.swing.JTextField();
        locShortcut = new javax.swing.JTextField();
        orgShortcut = new javax.swing.JTextField();
        posShortcut = new javax.swing.JTextField();
        jobShortcut = new javax.swing.JTextField();
        dateShortcut = new javax.swing.JTextField();
        applyButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        segShortcut = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        clickShortcut = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        untagShortcut = new javax.swing.JTextField();
        merShortcut = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        browseShortcut = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Shortcut key");
        setMinimumSize(new java.awt.Dimension(700, 550));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Shortcut Key List");
        jLabel1.setName("jLabel1"); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 44, -1, -1));

        jLabel2.setText("Person Button:");
        jLabel2.setName("jLabel2"); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 107, -1));

        jLabel3.setText("Location Button:");
        jLabel3.setName("jLabel3"); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 107, -1));

        jLabel4.setText("Organization Button:");
        jLabel4.setName("jLabel4"); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, -1));

        jLabel5.setText("Position Button:");
        jLabel5.setName("jLabel5"); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 107, -1));

        jLabel6.setText("Job Button:");
        jLabel6.setName("jLabel6"); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 107, -1));

        jLabel7.setText("Date Button:");
        jLabel7.setName("jLabel7"); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, -1, -1));

        ShortcutListener perListener = new ShortcutListener(perShortcut);
        perShortcut.setName("perShortcut"); // NOI18N
        perShortcut.addKeyListener(perListener);
        perShortcut.addFocusListener(perListener);
        perShortcut.setText(mapConfig.get(Config.PER_SHORTCUT));
        getContentPane().add(perShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 70, -1));

        ShortcutListener locListener = new ShortcutListener(locShortcut);
        locShortcut.setName("locShortcut"); // NOI18N
        locShortcut.addKeyListener(locListener);
        locShortcut.addFocusListener(locListener);
        locShortcut.setText(mapConfig.get(Config.LOC_SHORTCUT));
        getContentPane().add(locShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 70, -1));

        ShortcutListener orgListener = new ShortcutListener(orgShortcut);
        orgShortcut.setName("orgShortcut"); // NOI18N
        orgShortcut.addKeyListener(orgListener);
        orgShortcut.addFocusListener(orgListener);
        orgShortcut.setText(mapConfig.get(Config.ORG_SHORTCUT));
        getContentPane().add(orgShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 70, -1));

        ShortcutListener posListener = new ShortcutListener(posShortcut);
        posShortcut.setName("posShortcut"); // NOI18N
        posShortcut.addKeyListener(posListener);
        posShortcut.addFocusListener(posListener);
        posShortcut.setText(mapConfig.get(Config.POS_SHORTCUT));
        getContentPane().add(posShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 70, -1));

        ShortcutListener jobListener = new ShortcutListener(jobShortcut);
        jobShortcut.setName("jobShortcut"); // NOI18N
        jobShortcut.addKeyListener(jobListener);
        jobShortcut.addFocusListener(jobListener);
        jobShortcut.setText(mapConfig.get(Config.JOB_SHORTCUT));
        getContentPane().add(jobShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, 70, -1));

        ShortcutListener dateListener = new ShortcutListener(dateShortcut);
        dateShortcut.setName("dateShortcut"); // NOI18N
        dateShortcut.addKeyListener(dateListener);
        dateShortcut.addFocusListener(dateListener);
        dateShortcut.setText(mapConfig.get(Config.DATE_SHORTCUT));
        getContentPane().add(dateShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 70, -1));

        applyButton.setText("Apply");
        applyButton.setName("applyButton"); // NOI18N
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });
        getContentPane().add(applyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 440, -1, -1));

        jLabel13.setText("Alt +");
        jLabel13.setName("jLabel13"); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, -1, -1));

        jLabel14.setText("Alt +");
        jLabel14.setName("jLabel14"); // NOI18N
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, -1, -1));

        jLabel15.setText("Alt +");
        jLabel15.setName("jLabel15"); // NOI18N
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, -1, -1));

        jLabel16.setText("Alt +");
        jLabel16.setName("jLabel16"); // NOI18N
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, -1, -1));

        jLabel17.setText("Alt +");
        jLabel17.setName("jLabel17"); // NOI18N
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, -1, -1));

        jLabel18.setText("Alt +");
        jLabel18.setName("jLabel18"); // NOI18N
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, -1, -1));

        cancelButton.setText("Cancel");
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 440, -1, -1));

        jLabel20.setText("Normal click Button:");
        jLabel20.setName("jLabel20"); // NOI18N
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, -1, -1));

        jLabel9.setText("Alt + ");
        jLabel9.setName("jLabel9"); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 140, -1, -1));

        ShortcutListener segListener = new ShortcutListener(segShortcut);
        segShortcut.setName("segShortcut"); // NOI18N
        segShortcut.addKeyListener(segListener);
        segShortcut.addFocusListener(segListener);
        segShortcut.setText(mapConfig.get(Config.SEG_SHORTCUT));
        getContentPane().add(segShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 240, 70, -1));

        jLabel8.setText("Untag Button:");
        jLabel8.setName("jLabel8"); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, 90, -1));

        jLabel10.setText("Alt + ");
        jLabel10.setName("jLabel10"); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, -1, -1));

        ShortcutListener clickListener = new ShortcutListener(clickShortcut);
        clickShortcut.setName("clickShortcut"); // NOI18N
        clickShortcut.addKeyListener(clickListener);
        clickShortcut.addFocusListener(clickListener);
        clickShortcut.setText(mapConfig.get(Config.CLICK_SHORTCUT));
        getContentPane().add(clickShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, 70, -1));

        jLabel11.setText("Alt + ");
        jLabel11.setName("jLabel11"); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 190, -1, -1));

        jLabel12.setText("Merge Button:");
        jLabel12.setName("jLabel12"); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, 90, -1));

        jLabel19.setText("Alt + ");
        jLabel19.setName("jLabel19"); // NOI18N
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 240, -1, -1));

        jLabel21.setText("Seg Button:");
        jLabel21.setName("jLabel21"); // NOI18N
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 90, -1));

        ShortcutListener untagListener = new ShortcutListener(untagShortcut);
        untagShortcut.setName("untagShortcut"); // NOI18N
        untagShortcut.addKeyListener(untagListener);
        untagShortcut.addFocusListener(untagListener);
        untagShortcut.setText(mapConfig.get(Config.UNTAG_SHORTCUT));
        getContentPane().add(untagShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, 70, -1));

        ShortcutListener merListener = new ShortcutListener(merShortcut);
        merShortcut.setName("merShortcut"); // NOI18N
        merShortcut.addKeyListener(merListener);
        merShortcut.addFocusListener(merListener);
        merShortcut.setText(mapConfig.get(Config.MERGE_SHORTCUT));
        getContentPane().add(merShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 190, 70, -1));

        jLabel22.setText("Browse Button:");
        jLabel22.setName("jLabel22"); // NOI18N
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 290, 90, -1));

        jLabel23.setText("Alt + ");
        jLabel23.setName("jLabel23"); // NOI18N
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 290, -1, -1));

        ShortcutListener browseListener = new ShortcutListener(browseShortcut);
        browseShortcut.setName("browseShortcut"); // NOI18N
        browseShortcut.addKeyListener(browseListener);
        browseShortcut.addFocusListener(browseListener);
        browseShortcut.setText(mapConfig.get(Config.BROWSE_SHORTCUT));
        getContentPane().add(browseShortcut, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 290, 70, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        // TODO add your handling code here:
        Class c = TaggingPanel.class;
        /*
         * Luu cac thay doi vao mapConfig
         */
        if (!perShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.PER_SHORTCUT))) {
            mapConfig.put(Config.PER_SHORTCUT, perShortcut.getText());
        }// end if perShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.PER_SHORTCUT))
        
        if (!locShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.LOC_SHORTCUT))) {
            mapConfig.put(Config.LOC_SHORTCUT, locShortcut.getText());
        }
        
        if (!orgShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.ORG_SHORTCUT))) {
            mapConfig.put(Config.ORG_SHORTCUT, orgShortcut.getText());
        }
        
        if (!posShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.POS_SHORTCUT))) {
            mapConfig.put(Config.POS_SHORTCUT, posShortcut.getText());
        }
        if (!jobShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.JOB_SHORTCUT))) {
            mapConfig.put(Config.JOB_SHORTCUT, jobShortcut.getText());
        }
        
        if (!dateShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.DATE_SHORTCUT))) {
            mapConfig.put(Config.DATE_SHORTCUT, dateShortcut.getText());
        }
        
        if (!untagShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.UNTAG_SHORTCUT))) {
            mapConfig.put(Config.UNTAG_SHORTCUT, untagShortcut.getText());
        }
        
        if (!clickShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.CLICK_SHORTCUT))) {
            mapConfig.put(Config.CLICK_SHORTCUT, clickShortcut.getText());
        }
        
        if (!merShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.MERGE_SHORTCUT))) {
            mapConfig.put(Config.MERGE_SHORTCUT, merShortcut.getText());
        }
        
        if (!segShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.SEG_SHORTCUT))) {
            mapConfig.put(Config.SEG_SHORTCUT, segShortcut.getText());
        }
        
        if (!browseShortcut.getText().equalsIgnoreCase(mapConfig.get(Config.BROWSE_SHORTCUT))) {
            mapConfig.put(Config.BROWSE_SHORTCUT, browseShortcut.getText());
        }// end luu thay doi vao mapConfig
        
        try {
            /*
             * Thay doi shortcut cho cac button cua Tagging panel
             */
            Field[] fields = c.getDeclaredFields();
            Method setInfoButton = c.getDeclaredMethod("setInfoButton", Object.class);
            setInfoButton.setAccessible(true);
            for (Field field : fields) {
                if (field.getAnnotation(MyAnnotation.class) != null
                        && field.getAnnotation(MyAnnotation.class).type() == 1) {
                    /*
                     * Chi xet cac field co type = 1 la cac field cho phep thay doi shortcut
                     */
                    field.setAccessible(true);
                    setInfoButton.invoke(tagPanel, field.get(tagPanel));
                }// end if field.getAnnotation
            }// end foreach field
            MainFrame.storeConfig();
        } catch (Exception e) {
            e.printStackTrace();
        }
        dispose();

    }//GEN-LAST:event_applyButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        applyButton.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    class ShortcutListener extends KeyAdapter implements FocusListener {

        public ShortcutListener(JTextField textField) {
            this.textField = textField;
        }

        @Override
        /**
         * Override phuong thuc cua KeyAdapter
         */
        public void keyReleased(KeyEvent e) {
            int keyCode = e.getKeyCode();
            textField.setText(KeyEvent.getKeyText(keyCode));
        }

        /**
         * Implements cac phuong thuc cua interface FocusListener
         * @param e 
         */
        public void focusGained(FocusEvent e) {
            text = textField.getText();
            textField.setText("");
        }

        public void focusLost(FocusEvent e) {
            if (textField.getText().equals("")) {
                textField.setText(text);
            }// end if textField.getText().equals("")
        }
        private JTextField textField;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JTextField browseShortcut;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField clickShortcut;
    private javax.swing.JTextField dateShortcut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jobShortcut;
    private javax.swing.JTextField locShortcut;
    private javax.swing.JTextField merShortcut;
    private javax.swing.JTextField orgShortcut;
    private javax.swing.JTextField perShortcut;
    private javax.swing.JTextField posShortcut;
    private javax.swing.JTextField segShortcut;
    private javax.swing.JTextField untagShortcut;
    // End of variables declaration//GEN-END:variables
    /*
     * Luu gia tri truoc khi thay doi cua textfield
     */
    private String text;
    private TaggingPanel tagPanel;
    private HashMap<String, String> mapConfig;
}
