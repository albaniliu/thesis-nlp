/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on Nov 22, 2010, 12:53:01 PM
 */
package thesis;

import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import thesis.view.MergePanel;
import javax.swing.JPanel;
import javax.swing.UIManager;
import org.me.mylib.Properties;
import thesis.view.ConvertPanel;
import thesis.view.TaggingPanel;

/**
 * MainFrame program
 * @author banhbaochay
 */
public class MainFrame extends javax.swing.JFrame {

    /** Creates new form MainFrame */
    public MainFrame() {
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equalsIgnoreCase(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
        }

        proper = new Properties(defaultPropertiesPath);
        initComponents();
        addPanel("Convert", new ConvertPanel(proper), "Convert normal text file to JSRE format");
        addPanel("Merge", new MergePanel(proper), "Merge multiple JSRE files to one JSRE file");
        addPanel("Tag", new TaggingPanel(proper), "Manually tag entity for normal text file");
    }

    private void addPanel(String title, JPanel panel, String tooltip) {
        mainTab.addTab(title, null, panel, tooltip);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        preferencesDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        directoryTextField = new javax.swing.JTextField();
        browseDialogButton = new javax.swing.JButton();
        applyDialogButton = new javax.swing.JButton();
        cancelDialogButton = new javax.swing.JButton();
        mainTab = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        preferenceItem = new javax.swing.JMenuItem();
        exitItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();

        preferencesDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        preferencesDialog.setTitle("Preferences");
        preferencesDialog.setModal(true);
        preferencesDialog.setName("preferencesDialog"); // NOI18N

        jLabel1.setText("Default directory for open/save:");
        jLabel1.setName("jLabel1"); // NOI18N

        directoryTextField.setEditable(false);
        directoryTextField.setName("directoryTextField"); // NOI18N
        String directoryPath = proper.getProperty("directory");
        if (directoryPath == null) {
            directoryPath = defaultPath;
        }
        directoryTextField.setText(directoryPath);

        browseDialogButton.setText("Browse");
        browseDialogButton.setName("browseDialogButton"); // NOI18N
        browseDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseDialogButtonActionPerformed(evt);
            }
        });

        applyDialogButton.setText("Apply");
        applyDialogButton.setName("applyDialogButton"); // NOI18N
        applyDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyDialogButtonActionPerformed(evt);
            }
        });

        cancelDialogButton.setText("Cancel");
        cancelDialogButton.setName("cancelDialogButton"); // NOI18N
        cancelDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelDialogButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout preferencesDialogLayout = new javax.swing.GroupLayout(preferencesDialog.getContentPane());
        preferencesDialog.getContentPane().setLayout(preferencesDialogLayout);
        preferencesDialogLayout.setHorizontalGroup(
            preferencesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preferencesDialogLayout.createSequentialGroup()
                .addGroup(preferencesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(preferencesDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(directoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(browseDialogButton))
                    .addGroup(preferencesDialogLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(applyDialogButton)
                        .addGap(88, 88, 88)
                        .addComponent(cancelDialogButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        preferencesDialogLayout.setVerticalGroup(
            preferencesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preferencesDialogLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(preferencesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(directoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseDialogButton))
                .addGap(89, 89, 89)
                .addGroup(preferencesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyDialogButton)
                    .addComponent(cancelDialogButton))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main View");
        setName("Form"); // NOI18N

        mainTab.setName("mainTab"); // NOI18N

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        fileMenu.setText("File");
        fileMenu.setName("fileMenu"); // NOI18N

        preferenceItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        preferenceItem.setText("Preferences");
        preferenceItem.setName("preferenceItem"); // NOI18N
        preferenceItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preferenceItemActionPerformed(evt);
            }
        });
        fileMenu.add(preferenceItem);

        exitItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        exitItem.setText("Exit");
        exitItem.setName("exitItem"); // NOI18N
        exitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitItem);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");
        editMenu.setName("editMenu"); // NOI18N
        jMenuBar1.add(editMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTab, javax.swing.GroupLayout.PREFERRED_SIZE, 965, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(651, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseDialogButtonActionPerformed
        // TODO add your handling code here:--
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fc.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            directoryTextField.setText(file.getPath());
        }
}//GEN-LAST:event_browseDialogButtonActionPerformed

    private void applyDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyDialogButtonActionPerformed
        try {
            proper.putProperty(Properties.DIRECTORY_PATH, directoryTextField.getText());
//            labelStatus.setText("Save path successful");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Cannot save path! Return to default path",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        preferencesDialog.dispose();
}//GEN-LAST:event_applyDialogButtonActionPerformed

    private void cancelDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelDialogButtonActionPerformed
        // TODO add your handling code here:
        preferencesDialog.dispose();
}//GEN-LAST:event_cancelDialogButtonActionPerformed

    private void preferenceItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preferenceItemActionPerformed
        // TODO add your handling code here:
        preferencesDialog.pack();
        preferencesDialog.setLocationRelativeTo(null);
        String dirPath = proper.getProperty(Properties.DIRECTORY_PATH);
        if (dirPath == null) {
            dirPath = defaultPath;
        }
        directoryTextField.setText(dirPath);
        preferencesDialog.setVisible(true);
    }//GEN-LAST:event_preferenceItemActionPerformed

    private void exitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyDialogButton;
    private javax.swing.JButton browseDialogButton;
    private javax.swing.JButton cancelDialogButton;
    private javax.swing.JTextField directoryTextField;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTabbedPane mainTab;
    private javax.swing.JMenuItem preferenceItem;
    private javax.swing.JDialog preferencesDialog;
    // End of variables declaration//GEN-END:variables
    private Properties proper;
    private static String defaultPath = System.getProperty("user.home");
    private static String defaultPropertiesPath = System.getProperty("user.dir")
            + System.getProperty("file.separator") + "config.properties";
}
