/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MergePanel.java
 *
 * Created on Mar 2, 2011, 3:38:01 PM
 */
package thesis.view;

import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lib.ID;
import lib.JSREDocument;
import lib.JSRELine;
import lib.TextFilter;
import org.jdesktop.application.Action;
import org.me.mylib.Properties;

/**
 *
 * @author banhbaochay
 */
public class MergePanel extends javax.swing.JPanel {

    /** Creates new form MergePanel */
    public MergePanel(Properties proper) {
        this.proper = proper;
        initData();
        initComponents();
    }

    private void initData() {
        defaultPath = System.getProperty("user.dir");
        Object[] colMerge = {"File", "Line number in Text - Length"};
        mergeModel = new DefaultTableModel(colMerge, 0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        editItem = new javax.swing.JMenuItem();
        editDialog = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        lineCountTextSpin = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pathDialogTextField = new javax.swing.JTextField();
        applyDialogButton = new javax.swing.JButton();
        cancelDialogButton = new javax.swing.JButton();
        lengthTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mergeTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        upButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        pathTextField = new javax.swing.JTextField();
        mergeButton = new javax.swing.JButton();
        browseButton = new javax.swing.JButton();

        popupMenu.setName("popupMenu"); // NOI18N

        editItem.setText("Edit line count in text");
        editItem.setName("editItem"); // NOI18N
        editItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemActionPerformed(evt);
            }
        });
        popupMenu.add(editItem);

        editDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        editDialog.setTitle("Properties");
        editDialog.setName("editDialog"); // NOI18N
        editDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Line count in text document:");
        jLabel3.setName("jLabel3"); // NOI18N
        editDialog.getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        lineCountTextSpin.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        lineCountTextSpin.setName("lineCountTextSpin"); // NOI18N
        editDialog.getContentPane().add(lineCountTextSpin, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 70, -1));

        jLabel4.setText("Line count in JSRE document:");
        jLabel4.setName("jLabel4"); // NOI18N
        editDialog.getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        jLabel5.setText("ID Properties");
        jLabel5.setName("jLabel5"); // NOI18N
        editDialog.getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, -1, -1));

        jLabel6.setText("(equals to length)");
        jLabel6.setName("jLabel6"); // NOI18N
        editDialog.getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, -1, -1));

        jLabel7.setText("File path:");
        jLabel7.setName("jLabel7"); // NOI18N
        editDialog.getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        pathDialogTextField.setEditable(false);
        pathDialogTextField.setName("pathDialogTextField"); // NOI18N
        editDialog.getContentPane().add(pathDialogTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 270, -1));

        applyDialogButton.setText("Apply");
        applyDialogButton.setName("applyDialogButton"); // NOI18N
        applyDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyDialogButtonActionPerformed(evt);
            }
        });
        editDialog.getContentPane().add(applyDialogButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 80, -1));

        cancelDialogButton.setText("Cancel");
        cancelDialogButton.setName("cancelDialogButton"); // NOI18N
        cancelDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelDialogButtonActionPerformed(evt);
            }
        });
        editDialog.getContentPane().add(cancelDialogButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, -1, -1));

        lengthTextField.setEditable(false);
        lengthTextField.setName("lengthTextField"); // NOI18N
        editDialog.getContentPane().add(lengthTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, 70, -1));

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("List file to merge");
        jLabel1.setName("jLabel1"); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, -1, -1));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        mergeTable.setModel(mergeModel);
        mergeTable.setName("mergeTable"); // NOI18N
        mergeTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        MouseListener popupListener = new PopupListener();
        mergeTable.addMouseListener(popupListener);
        jScrollPane1.setViewportView(mergeTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 90, 580, 300));

        addButton.setText("Add");
        addButton.setToolTipText("Add file to merge[Ctrl + O]");
        addButton.setName("addButton"); // NOI18N
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 110, 90, -1));

        removeButton.setText("Remove");
        removeButton.setName("removeButton"); // NOI18N
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        add(removeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 170, 90, -1));

        upButton.setText("Up");
        upButton.setName("upButton"); // NOI18N
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });
        add(upButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 240, 90, -1));

        downButton.setText("Down");
        downButton.setName("downButton"); // NOI18N
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });
        add(downButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, 90, -1));

        jLabel2.setText("Path to save:");
        jLabel2.setName("jLabel2"); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, -1, -1));

        pathTextField.setEditable(false);
        pathTextField.setName("pathTextField"); // NOI18N
        pathTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pathTextFieldMouseClicked(evt);
            }
        });
        add(pathTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 430, 420, -1));

        mergeButton.setText("Merge");
        mergeButton.setName("mergeButton"); // NOI18N
        mergeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeButtonActionPerformed(evt);
            }
        });
        add(mergeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 490, 90, -1));

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(MergePanel.class, this);
        browseButton.setAction(actionMap.get("browseAction")); // NOI18N
        browseButton.setName("browseButton"); // NOI18N
        add(browseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 430, 90, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
         String path = null;
        path = proper.getProperty(Properties.DIRECTORY_PATH);
        JFileChooser fc = null;
        if (path == null) {
            fc = new JFileChooser(defaultPath);
        } else {
            fc = new JFileChooser(path);
        }
        fc.setFileFilter(new TextFilter());
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setMultiSelectionEnabled(true);
        int val = fc.showOpenDialog(null);
        if (val == JFileChooser.APPROVE_OPTION) {
            File[] files = fc.getSelectedFiles();
            ArrayList<File> errorFiles = new ArrayList<File>();
            for (File file : files) {
                try {
                    JSREDocument doc = new JSREDocument(file);
                    Object[] dataRow = {doc, doc.getLastID()};
                    mergeModel.addRow(dataRow);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(MergePanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(MergePanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(MergePanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalArgumentException e) {
                    /* File input is not JSRE format */
                    errorFiles.add(file);
                }
            }
            if (!errorFiles.isEmpty()) {
                StringBuilder mess = new StringBuilder();
                mess.append("There are ");
                mess.append(errorFiles.size());
                mess.append(" file(s) are not legal for JSRE format:\n");
                for (File err : errorFiles) {
                    mess.append(err.getAbsolutePath());
                    mess.append("\n");
                }
                JOptionPane.showMessageDialog(null, mess, "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        int[] rows = mergeTable.getSelectedRows();
        if (rows.length == 0) {
            String message = "No selected row to delete";
            JOptionPane.showMessageDialog(null, message, "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            for (int i = rows.length - 1; i >= 0; i--) {
                mergeModel.removeRow(rows[i]);
            }
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        // TODO add your handling code here:
        int[] rows = mergeTable.getSelectedRows();
        if (rows.length == 0) {
            String message = "No selected row to delete";
            JOptionPane.showMessageDialog(null, message, "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (rows[0] != 0) {
            int oldStart = rows[0];
            int oldEnd = rows[rows.length - 1];
            int newStart = rows[0] - 1;
            int newEnd = rows[rows.length - 1] - 1;
            mergeModel.moveRow(oldStart, oldEnd, newStart);
            mergeTable.setRowSelectionInterval(newStart, newEnd);
        }
    }//GEN-LAST:event_upButtonActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        // TODO add your handling code here:
        int[] rows = mergeTable.getSelectedRows();
        if (rows.length == 0) {
            String message = "No selected row to delete";
            JOptionPane.showMessageDialog(null, message, "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (rows[rows.length - 1] != mergeTable.getRowCount() - 1) {
            int oldStart = rows[0];
            int oldEnd = rows[rows.length - 1];
            int newStart = rows[0] + 1;
            int newEnd = rows[rows.length - 1] + 1;
            mergeModel.moveRow(oldStart, oldEnd, newStart);
            mergeTable.setRowSelectionInterval(newStart, newEnd);
        }
    }

    @Action
    public void browseAction() {
        String path = null;
        path = proper.getProperty(Properties.DIRECTORY_PATH);
        JFileChooser fc = null;
        if (path == null) {
            fc = new JFileChooser(defaultPath);
        } else {
            fc = new JFileChooser(path);
        }
        fc.setFileFilter(new TextFilter());
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int val = fc.showSaveDialog(null);
        if (val == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String filePath = file.getAbsolutePath();
            if (filePath.contains(".")) {
                pathTextField.setText(filePath);
            } else {
                pathTextField.setText(filePath + ".txt");
            }
        }
    }//GEN-LAST:event_downButtonActionPerformed

    private void pathTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pathTextFieldMouseClicked
        // TODO add your handling code here:
        browseAction();
    }//GEN-LAST:event_pathTextFieldMouseClicked

    private void mergeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeButtonActionPerformed
        // TODO add your handling code here:
        String fileSavePath = pathTextField.getText();
        PrintWriter out = null;
        try {
            out = new PrintWriter(new OutputStreamWriter(new FileOutputStream(fileSavePath), "UTF-8"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MergePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }

        /* Merge all document in table */
        Vector<Vector> rows = mergeModel.getDataVector();
        List<JSREDocument> docList = new ArrayList<JSREDocument>();
        for (Vector row : rows) {
            JSREDocument doc = (JSREDocument) row.get(0);
            docList.add(doc);
        }
        JSREDocument result = docList.get(0);
        for (int i = 1; i < docList.size(); i++) {
//            result.concat(docList.get(i));
            result = JSREDocument.merge(result, docList.get(i));
        }

        /* write to PrintWriter */
        for (JSRELine line : result.getLineList()) {
            out.print(line.getWholeLine());
            out.print("\r\n");
        }
        out.close();
        JOptionPane.showMessageDialog(null, "Merge done", "Message", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_mergeButtonActionPerformed

    private void editItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemActionPerformed
        // TODO add your handling code here:
        this.rowEdit = mergeTable.getSelectedRow();
        JSREDocument doc = (JSREDocument) mergeModel.getValueAt(this.rowEdit, 0);
        ID id = (ID) mergeModel.getValueAt(this.rowEdit, 1);
        pathDialogTextField.setText(doc.toString());
        lineCountTextSpin.setValue(id.getLineNumber());
        lengthTextField.setText(Integer.toString(id.getCount()));
        editDialog.setSize(400, 360);
        editDialog.setVisible(true);
    }//GEN-LAST:event_editItemActionPerformed

    private void applyDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyDialogButtonActionPerformed
        // TODO add your handling code here:
        int newLineCountText = (Integer) lineCountTextSpin.getValue();
        ID newId = new ID(newLineCountText, Integer.parseInt(lengthTextField.getText()));
        if (!((ID) mergeModel.getValueAt(rowEdit, 1)).compareTo(newId)) {
            mergeModel.setValueAt(newId, rowEdit, 1);
        }
        editDialog.dispose();
    }//GEN-LAST:event_applyDialogButtonActionPerformed

    private void cancelDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelDialogButtonActionPerformed
        // TODO add your handling code here:
        editDialog.dispose();
    }//GEN-LAST:event_cancelDialogButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton applyDialogButton;
    private javax.swing.JButton browseButton;
    private javax.swing.JButton cancelDialogButton;
    private javax.swing.JButton downButton;
    private javax.swing.JDialog editDialog;
    private javax.swing.JMenuItem editItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lengthTextField;
    private javax.swing.JSpinner lineCountTextSpin;
    private javax.swing.JButton mergeButton;
    private javax.swing.JTable mergeTable;
    private javax.swing.JTextField pathDialogTextField;
    private javax.swing.JTextField pathTextField;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton upButton;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel mergeModel;
    private int rowEdit;
    private Properties proper;
    private String defaultPath;

    /**
     * Class for Listener, isPopupTrigger equal right click, it needs in both mousePressed and
     * mouseReleased method
     */
    class PopupListener extends MouseAdapter {

        @Override
        public void mousePressed(MouseEvent e) {
            if (e.isPopupTrigger()) {
                showPopup(e);
            }
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            if (e.isPopupTrigger()) {
                showPopup(e);
            }
        }

        private void showPopup(MouseEvent e) {
            popupMenu.show(e.getComponent(), e.getX(), e.getY());
            Point point = e.getPoint();
            /* Select row at location where right click */
            int row = mergeTable.rowAtPoint(point);
            mergeTable.setRowSelectionInterval(row, row);
        }
    }
}